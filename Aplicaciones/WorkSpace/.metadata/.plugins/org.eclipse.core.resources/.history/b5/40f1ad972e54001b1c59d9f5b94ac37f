package comunicacionServer;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.ArrayList;
import java.util.List;

import elementos.Pedido;

public class Server {
	
	public static void main(String[] args) throws IOException {
		OutputStreamWriter out;
		BufferedReader in;
		ServerSocket s;
		Socket c;
		int port;
		
		Object mensaje;
		String operacion;
		Server operador;
		
		if(args.length < 1) {
			System.out.println("Sintaxis de llamada: java EcoServ <puerto>");
			System.exit(-1);
		}
		else {
			port=Integer.valueOf(args[0]).intValue();
			s= new ServerSocket(port);
			c = s.accept();
			in=new BufferedReader(new InputStreamReader( c.getInputStream()));
			out=new OutputStreamWriter(c.getOutputStream());
			
			while((operacion=in.readLine())!=null) {
				System.out.println("Operacion a realizar: " + operacion);
				
				if (confirmarOperacion(operacion)) {
					
				}
				
				out.write(mensaje.toString() + '\n');
				out.flush();
			}
		}
		
		out.close();
		in.close();
		c.close();
		s.close();
	}
	
	public boolean confirmarOperacion(String operacion) {
		boolean operacionConocida = true;
		
		switch(operacion) {
		case "add pedido":
		case "remove productos":
		case "new user":
			break; // Si conocemos la operacion devolvemos true.
		default: operacionConocida = false;
			break; // Sino devolvemos false.
		}
		
		return operacionConocida;
	}
	
	public <T> void aplicarOperacion(String operacion, T elemento) {
		
		switch(operacion) {
		case "add pedido":
			break;
		case "remove productos":
			break;
		case "new user":
			break;
		default: System.out.println("Operacion no conocida.");
			break;
		}
		
	}
}