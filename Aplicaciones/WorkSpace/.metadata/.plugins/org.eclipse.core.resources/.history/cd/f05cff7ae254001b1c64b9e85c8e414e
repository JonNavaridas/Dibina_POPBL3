package comunicacionServer;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.List;

public class Server implements PropertyChangeListener {
	
	List<Administrador> listaAdministradores;
	
	public static void main(String[] args) throws IOException {
		OutputStreamWriter out;
		BufferedReader in;
		ServerSocket s;
		Socket c;
		int port;
		
		String operacion;
		
		if(args.length < 1) {
			System.out.println("Sintaxis de llamada: java EcoServ <puerto>");
			System.exit(-1);
		}
		else {
			port = Integer.valueOf(args[0]).intValue();
			s= new ServerSocket(port);
			c = s.accept();
			
			in = new BufferedReader(new InputStreamReader( c.getInputStream()));
			out = new OutputStreamWriter(c.getOutputStream());
			
			while((operacion=in.readLine())!=null) {
				System.out.println("Operacion a realizar: " + operacion);
				
				out.flush();
			}
		
			out.close();
			in.close();
			c.close();
			s.close();
		}
	}

	@Override
	public void propertyChange(PropertyChangeEvent event) {
		if (event.getPropertyName().equals("end")) {
			Administrador administrador = (Administrador) event.getNewValue();
			administrador = null;
		}
	}
}